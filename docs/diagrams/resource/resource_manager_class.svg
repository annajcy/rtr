<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" data-diagram-type="CLASS" height="699px" preserveAspectRatio="none" style="width:989px;height:699px;background:#FFFFFF;" version="1.1" viewBox="0 0 989 699" width="989px" zoomAndPan="magnify"><title>Resource manager class diagram</title><defs/><g><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="230.3097" x="372.6575" y="24.9659">Resource manager class diagram</text><!--class C_0009847634702900292664--><g class="entity" data-entity="C_0009847634702900292664" data-source-line="3" data-uid="ent0002" id="entity_C_0009847634702900292664"><rect fill="#F1F1F1" height="227.6113" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="481.1103" x="253.26" y="465.3539"/><ellipse cx="396.8312" cy="481.3539" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1;"/><path d="M396.9406,476.8852 Q396.0187,476.8852 395.2843,477.1977 Q394.5656,477.5102 394.0656,478.1039 Q393.5656,478.6821 393.2843,479.5571 Q393.0187,480.4321 393.0187,481.5258 Q393.0187,482.9633 393.4562,484.0102 Q393.9093,485.0571 394.7531,485.6039 Q395.6125,486.1508 396.925,486.1508 Q397.7062,486.1508 398.3937,486.0258 Q399.0968,485.8852 400.0968,485.5727 L400.0968,487.4477 Q399.2375,487.7758 398.4718,487.9008 Q397.7218,488.0258 396.7062,488.0258 Q394.7843,488.0258 393.4718,487.2289 Q392.175,486.4164 391.5187,484.9477 Q390.8625,483.4633 390.8625,481.4946 Q390.8625,480.0727 391.2531,478.9008 Q391.6593,477.7133 392.4406,476.8383 Q393.2218,475.9633 394.3625,475.4946 Q395.5031,475.0102 396.9718,475.0102 Q397.925,475.0102 398.8156,475.2133 Q399.7218,475.4008 400.6593,475.8696 L399.8312,477.6508 Q399.05,477.2758 398.3937,477.0883 Q397.7375,476.8852 396.9406,476.8852 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126.7835" x="417.3312" y="486.7859">Resource_manager</text><rect fill="#FFFFFF" height="18.3441" style="stroke:#181818;stroke-width:1;stroke-dasharray:2.0,2.0;" width="56.6844" x="680.6859" y="462.3539"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="54.6844" x="681.6859" y="476.182">Key_type,T</text><line style="stroke:#181818;stroke-width:0.5;" x1="254.26" x2="733.3703" y1="497.3539" y2="497.3539"/><ellipse cx="264.26" cy="512.3879" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235.8011" x="273.26" y="516.3199">Resource_manager() = default : void</text><ellipse cx="264.26" cy="531.4558" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243.809" x="273.26" y="535.3878">~Resource_manager() = default : void</text><line style="stroke:#181818;stroke-width:1;stroke-dasharray:1.0,2.0;" x1="254.26" x2="733.3703" y1="543.4898" y2="543.4898"/><ellipse cx="264.26" cy="558.5237" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="455.1103" x="273.26" y="562.4557">add(const Key_type &amp; key, const std::shared_ptr&lt;T&gt; &amp; resource) : void</text><ellipse cx="264.26" cy="577.5917" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79.0997" x="273.26" y="581.5236">clear() : void</text><ellipse cx="264.26" cy="596.6596" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301.7268" x="273.26" y="600.5915">get(const Key_type &amp; key) : std::shared_ptr&lt;T&gt;</text><ellipse cx="264.26" cy="615.7275" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="21.5599" x="273.26" y="619.6595">get</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="280.0689" x="294.8199" y="619.6595">(const Key_type &amp; key) : std::shared_ptr&lt;S&gt;</text><ellipse cx="264.26" cy="634.7954" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248.947" x="273.26" y="638.7274">has(const Key_type &amp; key) const : bool</text><ellipse cx="264.26" cy="653.8633" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235.3811" x="273.26" y="657.7953">remove(const Key_type &amp; key) : void</text><line style="stroke:#181818;stroke-width:0.5;" x1="254.26" x2="733.3703" y1="665.8973" y2="665.8973"/><polygon fill="none" points="264.26,675.9312,268.26,679.9312,264.26,683.9312,260.26,679.9312" style="stroke:#B38D22;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="430.1624" x="273.26" y="684.8632">m_resources : std::unordered_map&lt;Key_type,std::shared_ptr&lt;T&gt;&gt;</text></g><!--class C_0001452446044658535002--><g class="entity" data-entity="C_0001452446044658535002" data-source-line="17" data-uid="ent0003" id="entity_C_0001452446044658535002"><rect fill="#F1F1F1" height="380.1546" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="969.6247" x="9" y="50.0839"/><ellipse cx="381.1625" cy="66.0839" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1;"/><path d="M381.2719,61.6152 Q380.35,61.6152 379.6156,61.9277 Q378.8969,62.2402 378.3969,62.8339 Q377.8969,63.4121 377.6156,64.2871 Q377.35,65.1621 377.35,66.2558 Q377.35,67.6933 377.7875,68.7402 Q378.2406,69.7871 379.0844,70.3339 Q379.9437,70.8808 381.2562,70.8808 Q382.0375,70.8808 382.725,70.7558 Q383.4281,70.6152 384.4281,70.3027 L384.4281,72.1777 Q383.5687,72.5058 382.8031,72.6308 Q382.0531,72.7558 381.0375,72.7558 Q379.1156,72.7558 377.8031,71.9589 Q376.5062,71.1464 375.85,69.6777 Q375.1937,68.1933 375.1937,66.2246 Q375.1937,64.8027 375.5844,63.6308 Q375.9906,62.4433 376.7719,61.5683 Q377.5531,60.6933 378.6937,60.2246 Q379.8344,59.7402 381.3031,59.7402 Q382.2562,59.7402 383.1469,59.9433 Q384.0531,60.1308 384.9906,60.5996 L384.1625,62.3808 Q383.3812,62.0058 382.725,61.8183 Q382.0687,61.6152 381.2719,61.6152 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158.1154" x="401.6625" y="71.5159">Resource_manager_dep</text><rect fill="#FFFFFF" height="18.3441" style="stroke:#181818;stroke-width:1;stroke-dasharray:2.0,2.0;" width="56.6844" x="924.9403" y="47.0839"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="54.6844" x="925.9403" y="60.912">Key_type,T</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="977.6247" y1="82.0839" y2="82.0839"/><ellipse cx="20" cy="97.1179" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267.1329" x="29" y="101.0499">Resource_manager_dep() = default : void</text><ellipse cx="20" cy="116.1858" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="275.1409" x="29" y="120.1178">~Resource_manager_dep() = default : void</text><line style="stroke:#181818;stroke-width:1;stroke-dasharray:1.0,2.0;" x1="10" x2="977.6247" y1="128.2198" y2="128.2198"/><ellipse cx="20" cy="143.2537" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="455.1103" x="29" y="147.1857">add(const Key_type &amp; key, const std::shared_ptr&lt;T&gt; &amp; resource) : void</text><ellipse cx="20" cy="162.3217" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="594.7737" x="29" y="166.2536">add_dependency(const Key_type &amp; resource_key, const Key_type &amp; dependency_key) : bool</text><ellipse cx="20" cy="181.3896" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="943.6247" x="29" y="185.3215">add_with_dependencies(const Key_type &amp; key, const std::shared_ptr&lt;T&gt; &amp; resource, const std::unordered_set&lt;Key_type&gt; &amp; dependencies) : bool</text><ellipse cx="20" cy="200.4575" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79.0997" x="29" y="204.3895">clear() : void</text><ellipse cx="20" cy="219.5254" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301.7268" x="29" y="223.4574">get(const Key_type &amp; key) : std::shared_ptr&lt;T&gt;</text><ellipse cx="20" cy="238.5933" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="21.5599" x="29" y="242.5253">get</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="280.0689" x="50.5599" y="242.5253">(const Key_type &amp; key) : std::shared_ptr&lt;S&gt;</text><ellipse cx="20" cy="257.6612" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="534.3359" x="29" y="261.5932">get_dependencies_of(const Key_type &amp; key) const : std::unordered_set&lt;Key_type&gt;</text><ellipse cx="20" cy="276.7292" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="524.998" x="29" y="280.6611">get_dependents_on(const Key_type &amp; key) const : std::unordered_set&lt;Key_type&gt;</text><ellipse cx="20" cy="295.7971" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248.947" x="29" y="299.729">has(const Key_type &amp; key) const : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="17" y="311.865"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="557.8" x="29" y="318.797">is_reachable(const Key_type &amp; start_node, const Key_type &amp; target_node) const : bool</text><ellipse cx="20" cy="333.9329" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235.3811" x="29" y="337.8649">remove(const Key_type &amp; key) : void</text><ellipse cx="20" cy="353.0008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="619.9456" x="29" y="356.9328">remove_dependency(const Key_type &amp; resource_key, const Key_type &amp; dependency_key) : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="977.6247" y1="365.0348" y2="365.0348"/><polygon fill="none" points="20,375.0687,24,379.0687,20,383.0687,16,379.0687" style="stroke:#B38D22;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="533.2019" x="29" y="384.0007">m_dependencies : std::unordered_map&lt;Key_type,std::unordered_set&lt;Key_type&gt;&gt;</text><polygon fill="none" points="20,394.1367,24,398.1367,20,402.1367,16,398.1367" style="stroke:#B38D22;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="520.0281" x="29" y="403.0686">m_dependents : std::unordered_map&lt;Key_type,std::unordered_set&lt;Key_type&gt;&gt;</text><polygon fill="none" points="20,413.2046,24,417.2046,20,421.2046,16,417.2046" style="stroke:#B38D22;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="430.1624" x="29" y="422.1365">m_resources : std::unordered_map&lt;Key_type,std::shared_ptr&lt;T&gt;&gt;</text></g><!--SRC=[nPLDZvim48Rl_8hHLkecIa2G0Db4APTAxQ7RItVLg-NWuKC57DbEggXgVtjDW8GqqA9Dgnuus3Fpp9XtnbQfoX0-eUGx4IBajA0n2WWpAYMmbCQ2vaQ6aGB5GQHnelIkm52bl30ghxiccjJHwmzu8EgmnUbpS0TKmbjYs_RomLtuStTXpvQs_cQ-xzQ0FZDyCoQ_iaTZU0CC8xhB5AnWprDcJ7uCyR8iOq8P6uMya0gQ4k4rVC735AfTgTXg9HCga96j4kldGDj53H-VyeKPqZ97iuvHTM9BZslaqN_z50mEUT8X2PKz_jNk2ZQSPyP4OCxts8i-rak8yIedpR5aat5NSC6mJ9hJxLd3wmC4nlS-wGd3RRVyZklDNDUtzUSzU7DFYzoMlyFS9N_97zO2VPv_iGqqfio21SCYF5mJcmZIGhVCvr1IgrD9M6A_fYevirEKBw_tmkciiTGzsD22TZKwsRcM_z3fEkJYv8H7V-ZytvtiagSqhRY9Dd0EpLJg0QDXGZTPnpHAHOKY1MVOqHVQLjPSMbyotRNJF-ZCwjveQpFawkZvbK6RfMuctNQR6VVliK115J8eHwzy_uhOtENP5FOef7ximBPyop4TpumtaRk9M6ZSFpv-_dYo7qDEAsTfETO2Hk-GSK7hfJctej1rnZy1]--></g></svg>