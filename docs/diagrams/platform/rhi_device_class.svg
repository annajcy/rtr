<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" data-diagram-type="CLASS" height="650px" preserveAspectRatio="none" style="width:2033px;height:650px;background:#FFFFFF;" version="1.1" viewBox="0 0 2033 650" width="2033px" zoomAndPan="magnify"><title>rhi_device class diagram</title><defs/><g><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="170.0224" x="927.5118" y="24.9659">rhi_device class diagram</text><!--class C_0012743932284637170494--><g class="entity" data-entity="C_0012743932284637170494" data-source-line="2" data-uid="ent0002" id="entity_C_0012743932284637170494"><rect fill="#F1F1F1" height="589.9017" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="2012.0459" x="7" y="47.0679"/><ellipse cx="975.6841" cy="63.0679" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1;"/><path d="M979.0278,68.3179 L977.5591,64.5679 L973.1216,64.5679 L971.6841,68.3179 L969.5591,68.3179 L974.5122,55.5992 L976.2622,55.5992 L981.1841,68.3179 L979.0278,68.3179 Z M975.6841,59.3648 Q975.6372,59.2085 975.5122,58.8492 Q975.3872,58.4898 975.2778,58.1148 Q975.1684,57.7242 975.3716,57.6617 Q975.5278,57.8492 975.4341,58.2085 Q975.3403,58.5523 975.2466,58.8492 Q975.1528,59.1304 975.0747,59.3648 L973.8403,62.6773 L976.9184,62.6773 L975.6841,59.3648 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="66.1778" x="996.1841" y="68.4999">RHI_device</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="2018.0459" y1="79.0679" y2="79.0679"/><ellipse cx="18" cy="94.1019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234.8351" x="27" y="98.0339">RHI_device(API_type api_type) : void</text><ellipse cx="18" cy="113.1698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="257.851" x="27" y="117.1018">~RHI_device() constexpr = default : void</text><line style="stroke:#181818;stroke-width:1;stroke-dasharray:1.0,2.0;" x1="8" x2="2018.0459" y1="125.2038" y2="125.2038"/><ellipse cx="18" cy="140.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184.6313" x="27" y="144.1697">api_type() : const API_type &amp;</text><ellipse cx="18" cy="159.3056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="139.9435" x="27" y="163.2376">check_error() = 0 : void</text><ellipse cx="18" cy="178.3735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="706.857" x="27" y="182.3055">create_compute_task(const std::shared_ptr&lt;RHI_shader_program&gt; &amp; shader_program) = 0 : RHI_compute_task::Ptr</text><ellipse cx="18" cy="197.4415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="576.9658" x="27" y="201.3734">create_depth_attachment_cubemap(int width, int height) : std::shared_ptr&lt;RHI_texture&gt;</text><ellipse cx="18" cy="216.5094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="890.3123" x="27" y="220.4414">create_element_buffer(Buffer_usage usage, unsigned int data_count, unsigned int data_size, const void * data) = 0 : std::shared_ptr&lt;RHI_buffer&gt;</text><ellipse cx="18" cy="235.5773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="1293.0629" x="27" y="239.5093">create_frame_buffer(int width, int height, const std::vector&lt;std::shared_ptr&lt;RHI_texture&gt;&gt; &amp; color_attachments, const std::shared_ptr&lt;RHI_texture&gt; &amp; depth_attachment) = 0 : std::shared_ptr&lt;RHI_frame_buffer&gt;</text><ellipse cx="18" cy="254.6452" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="1203.4348" x="27" y="258.5772">create_geometry(const std::unordered_map&lt;unsigned int,std::shared_ptr&lt;RHI_buffer&gt;&gt; &amp; vertex_buffers, const std::shared_ptr&lt;RHI_buffer&gt; &amp; element_buffer) = 0 : std::shared_ptr&lt;RHI_geometry&gt;</text><ellipse cx="18" cy="273.7131" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="841.8165" x="27" y="277.6451">create_memory_buffer(Buffer_type type, Buffer_usage usage, unsigned int data_size, const void * data) = 0 : std::shared_ptr&lt;RHI_buffer&gt;</text><ellipse cx="18" cy="292.781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="503.6198" x="27" y="296.713">create_memory_buffer_binder() = 0 : std::shared_ptr&lt;RHI_memory_buffer_binder&gt;</text><ellipse cx="18" cy="311.849" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="615.1715" x="27" y="315.7809">create_pipeline_state(const Pipeline_state &amp; pipeline_state) = 0 : std::shared_ptr&lt;RHI_pipeline_state&gt;</text><ellipse cx="18" cy="330.9169" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="392.0964" x="27" y="334.8489">create_pipeline_state() = 0 : std::shared_ptr&lt;RHI_pipeline_state&gt;</text><ellipse cx="18" cy="349.9848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="517.7878" x="27" y="353.9168">create_renderer(const Clear_state &amp; clear_state) = 0 : std::shared_ptr&lt;RHI_renderer&gt;</text><ellipse cx="18" cy="369.0527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="674.1951" x="27" y="372.9847">create_screen_buffer(const std::shared_ptr&lt;RHI_window&gt; &amp; window) = 0 : std::shared_ptr&lt;RHI_screen_buffer&gt;</text><ellipse cx="18" cy="388.1206" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="634.9395" x="27" y="392.0526">create_shader_code(Shader_type type, const std::string &amp; code) = 0 : std::shared_ptr&lt;RHI_shader_code&gt;</text><ellipse cx="18" cy="407.1885" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="1556.4718" x="27" y="411.1205">create_shader_program(const std::unordered_map&lt;Shader_type,std::shared_ptr&lt;RHI_shader_code&gt;&gt; &amp; shader_codes, const std::unordered_map&lt;std::string,std::shared_ptr&lt;Uniform_entry_base&gt;&gt; &amp; uniforms) = 0 : std::shared_ptr&lt;RHI_shader_program&gt;</text><ellipse cx="18" cy="426.2565" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="1787.6108" x="27" y="430.1884">create_texture_2D(int width, int height, unsigned int mipmap_levels, Texture_internal_format internal_format, const std::unordered_map&lt;Texture_wrap_target,Texture_wrap&gt; &amp; wraps, const std::unordered_map&lt;Texture_filter_target,Texture_filter&gt; &amp; filters) = 0 : std::shared_ptr&lt;RHI_texture&gt;</text><ellipse cx="18" cy="445.3244" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="1986.0459" x="27" y="449.2564">create_texture_2D_array(int width, int height, unsigned int mipmap_levels, Texture_internal_format internal_format, const std::unordered_map&lt;Texture_wrap_target,Texture_wrap&gt; &amp; wraps, const std::unordered_map&lt;Texture_filter_target,Texture_filter&gt; &amp; filters, unsigned int layer_count) = 0 : std::shared_ptr&lt;RHI_texture&gt;</text><ellipse cx="18" cy="464.3923" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="408.8964" x="27" y="468.3243">create_texture_builder() = 0 : std::shared_ptr&lt;RHI_texture_builder&gt;</text><ellipse cx="18" cy="483.4602" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="557.5059" x="27" y="487.3922">create_texture_color_attachment(int width, int height) : std::shared_ptr&lt;RHI_texture&gt;</text><ellipse cx="18" cy="502.5281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="1828.4067" x="27" y="506.4601">create_texture_cubemap(int width, int height, unsigned int mipmap_levels, Texture_internal_format internal_format, const std::unordered_map&lt;Texture_wrap_target,Texture_wrap&gt; &amp; wraps, const std::unordered_map&lt;Texture_filter_target,Texture_filter&gt; &amp; filters) = 0 : std::shared_ptr&lt;RHI_texture&gt;</text><ellipse cx="18" cy="521.596" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="563.2739" x="27" y="525.528">create_texture_depth_attachment(int width, int height) : std::shared_ptr&lt;RHI_texture&gt;</text><ellipse cx="18" cy="540.664" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="697.6732" x="27" y="544.5959">create_texture_depth_attachment_array(int width, int height, int array_size) : std::shared_ptr&lt;RHI_texture&gt;</text><ellipse cx="18" cy="559.7319" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="611.7417" x="27" y="563.6639">create_texture_depth_stencil_attachment(int width, int height) : std::shared_ptr&lt;RHI_texture&gt;</text><ellipse cx="18" cy="578.7998" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="1307.9308" x="27" y="582.7318">create_vertex_buffer(Buffer_usage usage, Buffer_data_type attribute_type, Buffer_iterate_type iterate_type, unsigned int unit_data_count, unsigned int data_size, const void * data) = 0 : std::shared_ptr&lt;RHI_buffer&gt;</text><ellipse cx="18" cy="597.8677" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="585.6736" x="27" y="601.7997">create_window(int width, int height, const std::string &amp; title) = 0 : std::shared_ptr&lt;RHI_window&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="2018.0459" y1="609.9017" y2="609.9017"/><polygon fill="none" points="18,619.9356,22,623.9356,18,627.9356,14,623.9356" style="stroke:#B38D22;stroke-width:1;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142.4075" x="27" y="628.8676">m_api_type : API_type</text></g><!--SRC=[vLTjJzim4FwUNs4n2SeeLGlT61KWRKnxaJO9xUshvIQNn29n8llIhaFijyzsaf9agQasjYzyYLzozzpTuxDzHeu941bp6i22-q3yX2b50iuYoLAFpHLAvYFP-VJkVIMoGvWYbtGydXoTJ8zFZu-ENaoV7vzCJiRJq-cTnYO9SkCTt84DNbwzfxZAWR2Ssyu-cP55nWFlu6T3R9_ucL08ttD9paa08IiIh2L78- -WLXyOVIjBrj2xtatjrYqvy6Fmhob8cKajV4x6DKnBI093e7wMveLkaQdhGOcgC9ZDLCma13H7UMQSrCC09CrbPbYx8BkaFLERCR9DoDdi2gLN6miWnvWoHER7AGYaVZ67bEK3Bf0iUO3na9Xk33oAqSJPvulc20i95ttXG08MU5w48SZ1AzlGGh48YFqEII4KZmG4rbB0a6c72u5zFnJ_eHLALWo1vAcThuFjSwuqtEjRg7c2shFUY6jR5dW1FcRopCM0MGS_IpBPu5IrG3OeQhtkMhY2QdhU6re4MGeeLyqCAaGcTOPe6Bt2PqroXmxYZ6iBaDhHQiOPJwMaTTeBxmgczhKta1JIJAuwwMEtcFaCoNO9zR1vq_A9phdGh0vSM7qAlSWvpo7X0gX2FQmMxwergQbjIxaCjoMtCVcNQ19CR9gEqlNB19XS- -tVZLncQenU0qgt8Efys9o8IqrojZI9MFPS1bkO_LRBizNF0XXyBlkD76nwWPABo9u2WJF81gBBOdMQRzx63M-6zzbft19ctDx8RTX6CB_1VXKyp6HAzUusISrKYLoKqsgBgEjRgo_mwaIaHwyt7ScjxPtoNFjB4rX0eWFwKcdhNo05IwXnYI7fZ1sHrmXBgM6HoGXms9opAQLRjGL6o1CqYzD6AMSDJjbpCkQwM- -eeanAjdeqX7L2IjZAfdJXlZIteN9UyEI-qxmZU-5rGReLmCDLKsiBhZBjiUwGBadTWkeFb-4-MFVUCtqhO6kGFpIcNo72vya_IQbMRTTRdrTpjf0gtqseBuQvVL4qQp2kLufLawGvw2IalYYG_iywlwm0jgZmrxStcZUgorfLNdYKUazIMhy4jN3z0lHkFM_lBGZBGg3jOcmUkY8wBD9aQ2fgnJD1ngFdeydXvDbXD0-dyp3mlRqF7xvzNF-tAklHv7Gq6PsGmHi8CicguU7nAFIda_rV]--></g></svg>