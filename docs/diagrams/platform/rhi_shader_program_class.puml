@startuml
title rhi_shader_program class diagram
enum "Uniform_data_type" as C_0016054929592142948558
enum C_0016054929592142948558 {
FLOAT
INT
BOOL
VEC2
VEC3
VEC4
IVEC2
IVEC3
IVEC4
MAT2
MAT3
MAT4
SAMPLER
UNKNOWN
}
enum "Shader_type" as C_0014986503219425241571
enum C_0014986503219425241571 {
VERTEX
FRAGMENT
GEOMETRY
COMPUTE
TESSELATION_CONTROL
TESSELATION_EVALUATION
UNKNOWN
}
abstract "RHI_shader_code" as C_0003924358758461557054
abstract C_0003924358758461557054 {
+RHI_shader_code(Shader_type type, const std::string & code) : void
+~RHI_shader_code() : void
..
{abstract} +compile() = 0 : bool
+shader_type() const : const Shader_type &
__
#m_shader_type : Shader_type
}
enum "Uniform_entry_type" as C_0003654959318505322393
enum C_0003654959318505322393 {
SINGLE
ARRAY
}
abstract "Uniform_entry_base" as C_0017511763741744628446
abstract C_0017511763741744628446 {
+Uniform_entry_base(Uniform_data_type data_type, Uniform_entry_type entry_type) : void
+~Uniform_entry_base() : void
..
{abstract} +data_count() const = 0 : unsigned int
{abstract} +data_ptr() const = 0 : const void *
+data_type() const : Uniform_data_type
+entry_type() const : Uniform_entry_type
+is_need_update() const : bool
+is_need_update() : bool &
__
#m_data_type : Uniform_data_type
#m_entry_type : Uniform_entry_type
#m_is_need_update : bool
}
class "Uniform_entry<T>" as C_0014133446175598414415
class C_0014133446175598414415 {
+Uniform_entry(const T & data) : void
+~Uniform_entry() : void
..
{static} +create(const T & data) : Ptr
+data() const : const T
+data_count() const : unsigned int
+data_ptr() const : const void *
+data_ptr_typed() const : const std::unique_ptr<T> &
+modify(const T & data) : void
__
#m_data : std::unique_ptr<T>
}
class "Uniform_entry_array<T>" as C_0006056365484271039216
class C_0006056365484271039216 {
+Uniform_entry_array(const T * data, unsigned int count) : void
+~Uniform_entry_array() : void
..
{static} +create(const T * data, unsigned int count) : std::shared_ptr<Uniform_entry_array<T>>
+data(unsigned int index) const : const T
+data_count() const : unsigned int
+data_ptr() const : const void *
+data_ptr_typed() const : const std::unique_ptr<T[]> &
+modify(const T & data, unsigned int index) : void
+modify(const T * data, unsigned int count, unsigned int offset = 0) : void
__
#m_count : unsigned int
#m_data : std::unique_ptr<T[]>
}
abstract "RHI_shader_program" as C_0003140125259210553215
abstract C_0003140125259210553215 {
+RHI_shader_program(const std::unordered_map<Shader_type,std::shared_ptr<RHI_shader_code>> & shaders, const std::unordered_map<std::string,std::shared_ptr<Uniform_entry_base>> & uniforms) : void
+~RHI_shader_program() : void
..
{abstract} +attach_code(const std::shared_ptr<RHI_shader_code> & code) = 0 : void
+codes() const : const std::unordered_map<Shader_type,std::shared_ptr<RHI_shader_code>> &
{abstract} +detach_code(const std::shared_ptr<RHI_shader_code> & code) = 0 : void
+get_uniform<T>(const std::string & name) : T
+get_uniform_array<T>(const std::string & name, unsigned int index) : T
+get_uniform_entry<T>(const std::string & name) : typename Uniform_entry<T>::Ptr
+get_uniform_entry_array<T>(const std::string & name) : typename Uniform_entry_array<T>::Ptr
{abstract} +link() = 0 : bool
+modify_uniform<T>(const std::string & name, const T & data) : void
+modify_uniform_array<T>(const std::string & name, const T * data, unsigned int count, unsigned int offset = 0) : void
{abstract} +set_uniform(const std::string & name, Uniform_data_type type, const void * data) = 0 : void
{abstract} +set_uniform_array(const std::string & name, Uniform_data_type type, const void * data, unsigned int count) = 0 : void
+uniforms() const : const std::unordered_map<std::string,std::shared_ptr<Uniform_entry_base>> &
{abstract} +update_uniforms() = 0 : void
__
#m_codes : std::unordered_map<Shader_type,std::shared_ptr<RHI_shader_code>>
#m_uniforms : std::unordered_map<std::string,std::shared_ptr<Uniform_entry_base>>
}
C_0003924358758461557054 o-- C_0014986503219425241571 : #m_shader_type
C_0017511763741744628446 o-- C_0003654959318505322393 : #m_entry_type
C_0017511763741744628446 o-- C_0016054929592142948558 : #m_data_type
C_0017511763741744628446 <|-- C_0014133446175598414415
C_0017511763741744628446 <|-- C_0006056365484271039216
C_0003140125259210553215 ..> C_0016054929592142948558
C_0003140125259210553215 o-- C_0014986503219425241571 : #m_codes
C_0003140125259210553215 o-- C_0003924358758461557054 : #m_codes
C_0003140125259210553215 o-- C_0017511763741744628446 : #m_uniforms

'Generated with clang-uml, version 0.6.1-15-gbf4bfdc
'LLVM version clang version 19.1.7 (Fedora 19.1.7-3.fc41)
@enduml
