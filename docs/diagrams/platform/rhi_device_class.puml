@startuml
title rhi_device class diagram
left to right direction
abstract "RHI_device" as C_0012743932284637170494
abstract C_0012743932284637170494 {
+RHI_device(API_type api_type) : void
+~RHI_device() constexpr = default : void
..
+api_type() : const API_type &
{abstract} +check_error() = 0 : void
{abstract} +create_compute_task(const std::shared_ptr<RHI_shader_program> & shader_program) = 0 : RHI_compute_task::Ptr
+create_depth_attachment_cubemap(int width, int height) : std::shared_ptr<RHI_texture>
{abstract} +create_element_buffer(Buffer_usage usage, unsigned int data_count, unsigned int data_size, const void * data) = 0 : std::shared_ptr<RHI_buffer>
{abstract} +create_frame_buffer(int width, int height, const std::vector<std::shared_ptr<RHI_texture>> & color_attachments, const std::shared_ptr<RHI_texture> & depth_attachment) = 0 : std::shared_ptr<RHI_frame_buffer>
{abstract} +create_geometry(const std::unordered_map<unsigned int,std::shared_ptr<RHI_buffer>> & vertex_buffers, const std::shared_ptr<RHI_buffer> & element_buffer) = 0 : std::shared_ptr<RHI_geometry>
{abstract} +create_memory_buffer(Buffer_type type, Buffer_usage usage, unsigned int data_size, const void * data) = 0 : std::shared_ptr<RHI_buffer>
{abstract} +create_memory_buffer_binder() = 0 : std::shared_ptr<RHI_memory_buffer_binder>
{abstract} +create_pipeline_state(const Pipeline_state & pipeline_state) = 0 : std::shared_ptr<RHI_pipeline_state>
{abstract} +create_pipeline_state() = 0 : std::shared_ptr<RHI_pipeline_state>
{abstract} +create_renderer(const Clear_state & clear_state) = 0 : std::shared_ptr<RHI_renderer>
{abstract} +create_screen_buffer(const std::shared_ptr<RHI_window> & window) = 0 : std::shared_ptr<RHI_screen_buffer>
{abstract} +create_shader_code(Shader_type type, const std::string & code) = 0 : std::shared_ptr<RHI_shader_code>
{abstract} +create_shader_program(const std::unordered_map<Shader_type,std::shared_ptr<RHI_shader_code>> & shader_codes, const std::unordered_map<std::string,std::shared_ptr<Uniform_entry_base>> & uniforms) = 0 : std::shared_ptr<RHI_shader_program>
{abstract} +create_texture_2D(int width, int height, unsigned int mipmap_levels, Texture_internal_format internal_format, const std::unordered_map<Texture_wrap_target,Texture_wrap> & wraps, const std::unordered_map<Texture_filter_target,Texture_filter> & filters) = 0 : std::shared_ptr<RHI_texture>
{abstract} +create_texture_2D_array(int width, int height, unsigned int mipmap_levels, Texture_internal_format internal_format, const std::unordered_map<Texture_wrap_target,Texture_wrap> & wraps, const std::unordered_map<Texture_filter_target,Texture_filter> & filters, unsigned int layer_count) = 0 : std::shared_ptr<RHI_texture>
{abstract} +create_texture_builder() = 0 : std::shared_ptr<RHI_texture_builder>
+create_texture_color_attachment(int width, int height) : std::shared_ptr<RHI_texture>
{abstract} +create_texture_cubemap(int width, int height, unsigned int mipmap_levels, Texture_internal_format internal_format, const std::unordered_map<Texture_wrap_target,Texture_wrap> & wraps, const std::unordered_map<Texture_filter_target,Texture_filter> & filters) = 0 : std::shared_ptr<RHI_texture>
+create_texture_depth_attachment(int width, int height) : std::shared_ptr<RHI_texture>
+create_texture_depth_attachment_array(int width, int height, int array_size) : std::shared_ptr<RHI_texture>
+create_texture_depth_stencil_attachment(int width, int height) : std::shared_ptr<RHI_texture>
{abstract} +create_vertex_buffer(Buffer_usage usage, Buffer_data_type attribute_type, Buffer_iterate_type iterate_type, unsigned int unit_data_count, unsigned int data_size, const void * data) = 0 : std::shared_ptr<RHI_buffer>
{abstract} +create_window(int width, int height, const std::string & title) = 0 : std::shared_ptr<RHI_window>
__
#m_api_type : API_type
}

'Generated with clang-uml, version 0.6.1-15-gbf4bfdc
'LLVM version clang version 19.1.7 (Fedora 19.1.7-3.fc41)
@enduml
